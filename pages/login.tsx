import Head from 'next/head'
import Header from '../components/header'
import { useState, ChangeEvent, FormEvent } from 'react'
import useNavigate from '../hooks/useNavigate'
import axios from 'axios'

export default function Login() {
  
  const[userInputs, setUserInputs] = useState({
    email:"",
    password:""
  })
  
  
  const navigate = useNavigate();

  const sendHttpRequest =  async()=>{
    try{
      const res = await fetch("http://localhost:3001/user/login",{
        method:"POST",
        body: JSON.stringify(userInputs),
        headers: {
          'Content-Type': 'application/json'
        }
      });
      const data =  res
      const dataJson = await data?.json();
      return (
        {message:dataJson.message, state:data?.status}
      )
    } catch (err) {
      console.log(err)
    }
  }

  const sendHttpRequestGet =  async()=>{
    try{
        const res = await fetch("http://localhost:3001/user/user", {
          headers:{
            auth:"hola",
            cookies:'63a4f47c601c11e25635ec3a=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzYTRmNDdjNjAxYzExZTI1NjM1ZWMzYSIsImlhdCI6MTY3MTgyMTk3NSwiZXhwIjoxNjcxODI1NTc1fQ.-kjX4M5vdBpd9isNmvnrzhg9vlr-jYPOJJ_EtnAoFPo'
          },

        });
        const data = await res.json();
        console.log(data);
    } catch (err) {
      console.log(err)
    }
}
  //const sendHttpRequest =async ()=>{
  //  const res = await axios.post('http://localhost:3001/user/login', {
  //    body: JSON.stringify({
  //      userInputs
  //    })
  //  })
  //    .then(async(res) => {
//
  //      const data =  await res.data.message
  //      //const dataJson = data?.mess;
  //     console.log(data)
  //    })
  //    .catch(error => {
  //      console.error(error);
  //    });
  //}


  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {
    const {value, name} = e.target
    setUserInputs(prevValues => 
      ({ ...prevValues, [name]: value }));
  };

  const handleSubmitLogin =async (e:FormEvent<HTMLFormElement>)=>{
    e.preventDefault();
    sendHttpRequest();
    const {message, state}: {message: string; state: number} = await sendHttpRequest() as {message: string; state: number}
    console.log({message,state})
     state === 200? sendHttpRequestGet():alert(message); setUserInputs({
      email:"",
      password:""
    }); 
  }

  return (
      <div >
        <Head>
          <title>Login</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
  
        <main>
          <Header />
          <div className='flex flex-col w-screen h-screen justify-center items-center'>
            <h1 className='mb-8 text-3xl text-blue-500 font-bold'> Login</h1>
            <form onSubmit={handleSubmitLogin} className=' md:w-[30%] bg-gradient-to-b from-[rgba(0,0,0,0.2)] to-[rgba(0,0,0,0.1)]  shadow-3d rounded-xl flex flex-col items-center p-8'> 
              <label >
                <input placeholder='example@exmail.com' name="email" required={true} onChange={handleChange} value={userInputs.email}></input>
                <span className='input-span'>Email</span>
              </label>
              <label >
                <input placeholder='Password' type="password" name="password" required={true} onChange={handleChange} value={userInputs.password}></input>
                <span className='input-span'>Password</span>
              </label>
              <button type='submit' className='mt-1 px-4 py-1 bg-blue-500 rounded-full font-bold shadow-lg hover:shadow-none'>Login</button>
            </form >
          </div>
        </main>
      </div>
  )
}